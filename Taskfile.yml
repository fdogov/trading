version: '3'

vars:
  SERVICE_NAME: trading
  DB_CONFIG_PATH: dbconfig.yml
  SQL_MIGRATE_VERSION: v1.2.0
  GOLANGCI_LINT_VERSION: v1.64.5
  GOMOCK_VERSION: v0.5.3
  GOWRAP_VERSION: v1.4.2
  GOTESTSUM_VERSION: v1.11.0
  GOBIN: $(pwd)/bin
  ROOT_DIR: "."

tasks:
  default:
    deps: [ install-tools ]
    cmds:
      - echo "Trading Service Task Runner"
      - echo "Run 'task --list' to see available tasks"
      - task: fmt
      - task: lint
      - task: test

  compose:up:
    desc: Start all containers
    cmds:
      - podman-compose up -d

  compose:down:
    desc: Stop and remove all containers
    cmds:
      - podman-compose down

  infra-up:
    desc: "Start infrastructure containers"
    cmds:
      - podman-compose up -d postgres redpanda redpanda-console redpanda-setup

  infra-down:
    desc: "Stop infrastructure containers"
    cmds:
      - podman-compose down

  install-tools:
    desc: install migration tools
    cmds:
      - GOPATH=$GOPATH GOBIN={{ .GOBIN }} go install -v github.com/rubenv/sql-migrate/...@{{ .SQL_MIGRATE_VERSION }}
      - GOPATH=$GOPATH GOBIN={{ .GOBIN }} go install -v github.com/golangci/golangci-lint/cmd/golangci-lint@{{ .GOLANGCI_LINT_VERSION }}
      - GOPATH=$GOPATH GOBIN={{ .GOBIN }}  go install -v github.com/rubenv/sql-migrate/...@{{ .SQL_MIGRATE_VERSION }}
      - GOPATH=$GOPATH GOBIN={{ .GOBIN }}  go install -v github.com/matryer/moq@{{ .GOMOCK_VERSION }}
      - GOPATH=$GOPATH GOBIN={{ .GOBIN }}  go install github.com/hexdigest/gowrap/cmd/gowrap@{{ .GOWRAP_VERSION }}
    silent: true
    env:
      GOPRIVATE: gitlab.diftech.org

  migrations-new:
    desc: create migration
    deps: [ install-tools ]
    cmds:
      - GOPATH=$GOPATH GOBIN={{ .GOBIN }} PATH=$PATH:$GOBIN sql-migrate new -config={{ .DB_CONFIG_PATH }} -env="development" {{.CLI_ARGS}}

  migrations-up:
    desc: apply all pending migrations
    deps: [ install-tools ]
    cmds:
      - GOPATH=$GOPATH GOBIN={{ .GOBIN }} PATH=$PATH:$GOBIN sql-migrate up -config={{ .DB_CONFIG_PATH }} -env="development"

  migrations-down:
    desc: undo last applied migration
    deps: [ install-tools ]
    cmds:
      - GOPATH=$GOPATH GOBIN={{ .GOBIN }} PATH=$PATH:$GOBIN sql-migrate down -config={{ .DB_CONFIG_PATH }} -env="development"

  migrations-status:
    desc: show migration status
    deps: [ install-tools ]
    cmds:
      - GOPATH=$GOPATH GOBIN={{ .GOBIN }} PATH=$PATH:$GOBIN sql-migrate status -config={{ .DB_CONFIG_PATH }} -env="development"

  run-app:
    desc: "Run the trading application"
    cmds:
      - go run ./cmd/trading/main.go

  run-app-local:
    desc: "Run the trading application with local Kafka configuration"
    cmds:
      - KAFKA_BROKER=localhost:9092 go run ./cmd/trading/main.go

  clean:
    desc: Clean containers
    cmds:
      - podman pod rm -f pod_trading || true
      - podman rm -f trading-postgres trading-redpanda trading-redpanda-console trading-redpanda-setup trading-migrations trading-service || true

  gen:
    desc: generate all
    cmds:
      - echo "Generating code using go:generate directives"
      - task: remove-mocks
      - task: remove-wrappers
      - task: gen-mocks
      - task: gen-wraps

  remove-mocks:
    desc: remove mocks
    cmds:
      - cmd: find ./internal -type f -name '*.go' -exec grep -il '^// Code generated by moq; DO NOT EDIT.' {} \; -delete
        ignore_error: true
        silent: true

  remove-wrappers:
    desc: remove wrappers
    cmds:
      - cmd: find ./internal -type f -name '*.go' -exec grep -il '^// Code generated by gowrap. DO NOT EDIT.' {} \; -delete
        ignore_error: true
        silent: true

  create-gen-dirs:
    desc: create gen directories
    cmds:
      - cmd: find ./internal -type d -not -path "*/\.*" -not -path "*/gen" | xargs -I{} mkdir -p {}/gen
        ignore_error: true
        silent: true

  gen-mocks:
    desc: generate mocks
    deps: [ create-gen-dirs ]
    cmds:
      - GOPATH=$GOPATH GOBIN={{ .GOBIN }} PATH=$PATH:$GOBIN go generate -run="moq" ./...

  gen-wraps:
    desc: generate wrappers for retry clients and error-wrapped stores
    deps: [ create-gen-dirs ]
    cmds:
      - GOPATH=$GOPATH GOBIN={{ .GOBIN }} PATH=$PATH:$GOBIN go generate -run="gowrap" ./internal/dependency/...
      - GOPATH=$GOPATH GOBIN={{ .GOBIN }} PATH=$PATH:$GOBIN go generate -run="gowrap" ./internal/store/...

  fmt:
    desc: format code
    cmds:
      - go fmt ./...

  lint:
    desc: lint code
    deps: [ install-tools ]
    cmds:
      - GOPATH=$GOPATH GOBIN={{ .GOBIN }} PATH=$PATH:$GOBIN golangci-lint run

  test:
    desc: run tests
    cmds:
      - go test ./...